{"version":3,"sources":["webpack:///./routes/add-device/style.css","webpack:///./routes/add-device/index.js","webpack:///./configuration.js"],"names":["module","exports","axios","require","default","AddDevice","Component","constructor","props","super","unmounted","scan","self","this","Promise","resolve","reject","attempts","f","url","Configuration","provisionURL","timeout","callTimeoutMilli","then","res","key","data","result","setState","step","public_key","error","setTimeout","console","log","onSSIDInput","ev","ssid","target","value","onPasswordInput","pass","configureDeviceWifi","JSON","stringify","state","method","alert","registerDevice","mdashURL","localStorage","ktok","get","pubkeys","location","href","host","pathname","catch","err","backToStep0","backToStep1","componentDidMount","app","headerName","backlink","componentWillUnmount","render","div","class","title","icon","onClick","type","placeholder","onInput","disabled","style","addDevice","baseURL","appID","defaultSiteName","drinkSizes","drinkSizes_US","kegSizes","kegSizes_US"],"mappings":"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","file":"route-add-device.chunk.f2446.esm.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"addDevice\":\"addDevice__3BlMH\"};","import { h, Component } from 'preact';\r\nimport { Router } from 'preact-router';\r\nimport style from './style';\r\nimport Configuration from '../../configuration';\r\nimport SpinButton from '../../components/spin-button';\r\nconst axios = require('axios').default;\r\n\r\nexport default class AddDevice extends Component {\r\n    unmounted = false;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            step: 0,\r\n            ssid: \"\",\r\n            pass: \"\",\r\n            public_key: \"\"\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.app.setState({\r\n            headerName: \"Add Device\",\r\n            backlink: \"\"\r\n        });\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.unmounted = true;\r\n    };\r\n\r\n    scan = () => {\r\n        let self = this;\r\n\r\n        return new Promise(function (resolve, reject) {\r\n            let attempts = 0;\r\n            let f = function () {\r\n                let error = function (err) {\r\n                    if (!self.unmounted) setTimeout(f, 500);\r\n                };\r\n                let success = function (res) {\r\n                    let key = res.data.result;\r\n                    if (key) {\r\n                        self.setState({\r\n                            step: 1,\r\n                            public_key: key\r\n                        });\r\n                        resolve();\r\n                    } else {\r\n                        reject(res.data.error);\r\n                    }\r\n                };\r\n\r\n                axios({\r\n                    url: Configuration.provisionURL + \"/GetKey\",\r\n                    timeout: Configuration.callTimeoutMilli\r\n                }).then(success, error);\r\n                attempts++;\r\n                console.log(\"attempt\", attempts);\r\n            };\r\n            f();\r\n        });\r\n    }\r\n\r\n    onSSIDInput = (ev) => {\r\n        this.setState({\r\n            ssid: ev.target.value\r\n        });\r\n    }\r\n\r\n    onPasswordInput = (ev) => {\r\n        this.setState({\r\n            pass: ev.target.value\r\n        });\r\n    }\r\n\r\n    configureDeviceWifi = () => {\r\n        let self = this;\r\n\r\n        let data = JSON.stringify({\r\n            ssid: self.state.ssid,\r\n            pass: self.state.pass\r\n        });\r\n        return axios({\r\n            method: \"POST\",\r\n            url: Configuration.provisionURL + \"/setup\",\r\n            timeout: Configuration.callTimeoutMilli,\r\n            data: data\r\n        }).then(function (res) {\r\n            if (res.data.result) {\r\n                self.setState({\r\n                    step: 2\r\n                });\r\n            } else {\r\n                alert(\"Error: \" + res.data.error);\r\n            }\r\n        });\r\n    }\r\n\r\n    registerDevice = () => {\r\n        let self = this;\r\n\r\n        let url =\r\n            Configuration.mdashURL +\r\n            \"/customer?access_token=\" + localStorage.ktok\r\n        return axios\r\n            .get(url)\r\n            .then(function (res) {\r\n                let data = res.data;\r\n                if (!data.pubkeys) data.pubkeys = {};\r\n                data.pubkeys[self.state.public_key] = {};\r\n                return axios({\r\n                    method: \"POST\",\r\n                    url: url,\r\n                    data: data\r\n                });\r\n            })\r\n            .then(function (res) {\r\n                // Go back to https, now with a registered device\r\n                location.href = \"https://\" + location.host + location.pathname;\r\n            })\r\n            .catch(function (err) {\r\n                alert(\r\n                    \"Error registering device (\" +\r\n                    err +\r\n                    \"). Join your WiFi network and retry.\"\r\n                );\r\n            });\r\n    }\r\n\r\n    backToStep0 = () => {\r\n        this.setState({ step: 0 });\r\n    }\r\n\r\n    backToStep1 = () => {\r\n        this.setState({ step: 1 });\r\n    }\r\n\r\n    render() {\r\n        let self = this;\r\n\r\n        let div;\r\n\r\n        if (self.state.step === 0) {\r\n            div = <div>\r\n                <div class=\"p-2 text-muted font-weight-light lead\">\r\n                    Go to your phone settings\r\n                        <br />\r\n                    Join WiFi network Kegtron-XXXX\r\n                        <br />\r\n                    Return to this screen and press the Scan button\r\n                </div>\r\n\r\n                <SpinButton class=\"btn-block btn-primary border font-weight-light\"\r\n                    title=\"Scan\"\r\n                    icon=\"fa-search\"\r\n                    onClick={self.scan} />\r\n            </div>;\r\n        } else if (self.state.step === 1) {\r\n            div = <div>\r\n                <a href={location.href} class=\"link text-decoration-none\" onClick={self.backToStep0}>\r\n                    <span class=\"fa fa-arrow-left\"></span>\r\n                    back\r\n                </a>\r\n\r\n                <div class=\"p-2 text-muted font-weight-light lead mt-2\">\r\n                    Found new device\r\n                </div>\r\n\r\n                <input class=\"form-control mb-2\" type=\"text\" placeholder=\"WiFi network name\" onInput={self.onSSIDInput} />\r\n\r\n                <input class=\"form-control mb-2\" type=\"text\" placeholder=\"WiFi password\" onInput={self.onPasswordInput} />\r\n\r\n                <SpinButton class=\"btn-block btn-primary font-weight-light\"\r\n                    title=\"Configure device WiFi\"\r\n                    icon=\"fa-save\"\r\n                    disabled={!self.state.ssid}\r\n                    onClick={self.configureDeviceWifi} />\r\n            </div>;\r\n        } else if (self.state.step === 2) {\r\n            div = <div>\r\n                <a href={location.href} class=\"link text-decoration-none\" onClick={self.backToStep1}>\r\n                    <span class=\"fa fa-arrow-left\"></span>\r\n                    back\r\n                </a>\r\n\r\n                <div class=\"p-2 text-muted font-weight-light lead mt-2\">\r\n                    WiFi settings applied. Go to your phone settings,\r\n                    <br />\r\n                    Join back to your WiFi network,\r\n                    <br />\r\n                    Return to this screen and click on Register Device.\r\n                </div>\r\n\r\n                <input class=\"form-control mb-2\" type=\"text\" placeholder=\"WiFi network name\" onInput={self.onSSIDInput} />\r\n\r\n                <input class=\"form-control mb-2\" type=\"text\" placeholder=\"WiFi password\" onInput={self.onPasswordInput} />\r\n\r\n                <SpinButton class=\"btn-block btn-primary border font-weight-light\"\r\n                    title=\"Register Device\"\r\n                    icon=\"fa-plus-circle\"\r\n                    onClick={self.registerDevice} />\r\n            </div>;\r\n        } else {\r\n            div = <div></div>;\r\n        }\r\n\r\n        return (\r\n            <div class={style.addDevice}>\r\n                <div class=\"overflow-auto p-2\">\r\n                    {div}\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n}","const Configuration = {\r\n    baseURL: \"http://localhost:8080/\",\r\n    provisionURL: \"http://192.168.4.1\",\r\n    mdashURL: \"https://mdash.net\",\r\n    appID: \"\", // <-- Set this to YOUR_APP_ID\r\n    callTimeoutMilli: 10000, // 10 seconds\r\n    defaultSiteName: \"NewSite\",\r\n    drinkSizes: {\r\n        \"1000\": \"Liter (1000 mL)\",\r\n        \"500\": \"Half Liter (500 mL)\",\r\n        \"651\": \"Bomber (651 mL)\",\r\n        \"568\": \"UK Pint (568 mL)\",\r\n        \"473\": \"US Pint (473 mL)\",\r\n        \"355\": \"US Bottle (355 mL)\",\r\n        \"0\": \"Custom\"\r\n    },\r\n    drinkSizes_US: {\r\n        \"1000\": \"Liter (33.8oz)\",\r\n        \"500\": \"Half Liter (16.9 oz)\",\r\n        \"651\": \"Bomber (22.0 oz)\",\r\n        \"568\": \"UK Pint (19.2 oz)\",\r\n        \"473\": \"US Pint (16 oz)\",\r\n        \"355\": \"US Bottle (12 oz)\",\r\n        \"0\": \"Custom\"\r\n    },\r\n    kegSizes: {\r\n        \"9464\": \"Half Corny (9.5L)\",\r\n        \"18927\": \"Corny (18.9L)\",\r\n        \"19550\": \"1/6 Barrel (19.6L)\",\r\n        \"20000\": \"20L\",\r\n        \"25000\": \"25L\",\r\n        \"29340\": \"1/4 Barrel (29.3L)\",\r\n        \"30000\": \"30L\",\r\n        \"40915\": \"Firkin (40.9L)\",\r\n        \"50000\": \"50L\",\r\n        \"58670\": \"1/2 Barrel (58.7L)\",\r\n        \"0\": \"Custom\"\r\n    },\r\n    kegSizes_US: {\r\n        \"9464\": \"Half Corny (2.5 gal)\",\r\n        \"18927\": \"Corny (5 gal)\",\r\n        \"19550\": \"1/6 Barrel (5.16 gal)\",\r\n        \"20000\": \"20L (5.28 gal)\",\r\n        \"25000\": \"25L (6.6 gal)\",\r\n        \"29340\": \"1/4 Barrel (7.75 gal)\",\r\n        \"30000\": \"30L (7.93 gal)\",\r\n        \"40915\": \"Firkin (10.81 gal)\",\r\n        \"50000\": \"50L (13.21 gal)\",\r\n        \"58670\": \"1/2 Barrel (15.5 gal)\",\r\n        \"0\": \"Custom\"\r\n    }\r\n}\r\n\r\nexport default Configuration;"],"sourceRoot":""}