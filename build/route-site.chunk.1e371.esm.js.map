{"version":3,"sources":["webpack:///./routes/site/style.css","webpack:///./routes/site/index.js","webpack:///./global-access.js","webpack:///./configuration.js"],"names":["module","exports","Sites","Component","constructor","props","super","kegLevel","keg","volSize","volStart","volDisp","toFixed","mlToUnits","val","isMetric","th","label","sortColumn","cls","self","this","style","undefined","class","onClick","setState","direction","state","getBar","c","lvl","bg","lowThreshold","emptyThreshold","role","getKegs","devices","app","kegs","mkdevices","k","d","r","shadow","reported","config","siteName","Configuration","defaultSiteName","name","i","portCount","port","push","sort","a","b","l1","userName","l2","online","drinkSize","componentDidMount","headerName","backlink","Object","keys","length","GlobalAccess","getDevices","render","site","map","v","volLeft","drinksLeft","parseInt","displayUnits","bar","h","href","id","axios","require","default","get","mdashURL","localStorage","ktok","then","res","pending","data","pubkeys","url","encodeURIComponent","method","catch","Promise","all","getAllServings","servings","baseURL","provisionURL","appID","callTimeoutMilli","drinkSizes","drinkSizes_US","kegSizes","kegSizes_US"],"mappings":"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","file":"route-site.chunk.1e371.esm.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"site\":\"site__1MWKo\"};","import { h, Component } from 'preact';\r\nimport Router from 'preact-router';\r\nimport style from './style';\r\nimport Configuration from '../../configuration';\r\nimport GlobalAccess from '../../global-access';\r\n\r\nexport default class Sites extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            sortColumn: 2,\r\n            direction: 1\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        let self = this;\r\n\r\n        self.props.app.setState({\r\n            headerName: \"Sites / \" + self.props.name,\r\n            backlink: \"/sites\"\r\n        });\r\n\r\n        if (self.props.app.state.devices) {\r\n            if (Object.keys(self.props.app.state.devices).length === 0 && self.props.app.state.devices.constructor === Object) {\r\n                GlobalAccess.getDevices(self.props.app);\r\n            }\r\n        }\r\n    }\r\n\r\n    kegLevel = (keg) => {\r\n        return keg.volSize ?\r\n            +((100 * (keg.volStart - keg.volDisp)) / keg.volSize).toFixed(2) :\r\n            0;\r\n    }\r\n\r\n    mlToUnits = (val, isMetric) => {\r\n        if (isMetric) {\r\n            return (val / 1000.0).toFixed(2) + \" L\";\r\n        } else {\r\n            return (val / 3785.41).toFixed(2) + \" gal\";\r\n        }\r\n    }\r\n\r\n    th = (label, sortColumn, cls) => {\r\n        let self = this;\r\n\r\n        return (\r\n            <th style={sortColumn === undefined ? \"\" : \"cursor: pointer\"}\r\n                class={cls || \"\"}\r\n                onClick={function () {\r\n                    if (sortColumn === undefined) return;\r\n                    let direction = self.state.sortColumn == sortColumn ? self.state.direction * -1 : 1;\r\n                    self.setState({\r\n                        sortColumn: sortColumn,\r\n                        direction: direction\r\n                    });\r\n                }}>\r\n                {label}\r\n            </th>\r\n        );\r\n    }\r\n\r\n    getBar = (c, lvl) => {\r\n        let bg = \"\";\r\n        if (c.lowThreshold > 0 && lvl < c.lowThreshold) bg = \" bg-warning\";\r\n        if (c.emptyThreshold > 0 && lvl < c.emptyThreshold) bg = \" bg-danger\";\r\n        if (lvl < 0) bg = \" text-danger\";\r\n\r\n        let bar = <div class=\"progress mt-1\" style=\"min-width: 8em\">\r\n            <div class={\"progress-bar\" + bg}\r\n                style={\"width:\" + (lvl < 0 ? 0 : lvl) + \"%\"}\r\n                role=\"progressbar\">\r\n                <span class=\"px-2\">{lvl}%</span>\r\n            </div>\r\n        </div >;\r\n\r\n        return bar;\r\n    }\r\n\r\n    getKegs = () => {\r\n        let self = this;\r\n        let devices = self.props.app.state.devices,\r\n            kegs = [];\r\n\r\n        let mkdevices = function (k) {\r\n            let d = devices[k],\r\n                r = d.shadow.state.reported,\r\n                c = r.config,\r\n                name = c.siteName || Configuration.defaultSiteName;\r\n            if (name != self.props.name) return;\r\n\r\n            for (let i = 0; i < c.portCount; i++) {\r\n                c[\"port\" + i].d = d;\r\n                c[\"port\" + i].port = i;\r\n                c[\"port\" + i].r = r;\r\n                kegs.push(c[\"port\" + i]);\r\n            }\r\n        };\r\n\r\n        for (let k in devices) mkdevices(k);\r\n        kegs.sort(function (a, b) {\r\n            let l1 = a.userName,\r\n                l2 = b.userName;\r\n            if (self.state.sortColumn == 1) {\r\n                l1 = a.r.online;\r\n                l2 = b.r.online;\r\n            } else if (self.state.sortColumn == 2) {\r\n                l1 = self.kegLevel(a);\r\n                l2 = self.kegLevel(b);\r\n            } else if (self.state.sortColumn == 3) {\r\n                l1 = a.volDisp;\r\n                l2 = b.volDisp;\r\n            } else if (self.state.sortColumn == 4) {\r\n                l1 = a.volStart - a.volDisp;\r\n                l2 = b.volStart - b.volDisp;\r\n            } else if (self.state.sortColumn == 5) {\r\n                if (a.drinkSize > 0) l1 = (a.volStart - a.volDisp) / a.drinkSize;\r\n                if (b.drinkSize > 0) l2 = (b.volStart - b.volDisp) / b.drinkSize;\r\n            } else if (self.state.sortColumn == 6) {\r\n                l1 = a.volSize;\r\n                l2 = b.volSize;\r\n            }\r\n            if (l1 == l2) return a.userName > b.userName ? 1 : -1;\r\n            return l1 > l2 ? 1 * self.state.direction : -1 * self.state.direction;\r\n        });\r\n\r\n        return kegs;\r\n    }\r\n\r\n    render() {\r\n        let self = this;\r\n        let kegs = self.getKegs();\r\n        debugger;\r\n        return (\r\n            <div class={style.site}>\r\n                <div class=\"overflow-auto p-2\">\r\n                    <div class=\"h-100\">\r\n                        <table class=\"w-100 table table-borderless table-sm mt-2\">\r\n                            <tr class=\"small border-bottom\">\r\n                                {self.th(\"Name\", 0)}\r\n                                {self.th(\"Status\", 1)}\r\n                                {self.th(\"Level\", 2, \"w-25\")}\r\n                                {self.th(\"Vol Served\", 3)}\r\n                                {self.th(\"Vol Remain\", 4)}\r\n                                {self.th(\"Servings Remain\", 5)}\r\n                                {self.th(\"Size\", 6)}\r\n                                <th></th>\r\n                            </tr>\r\n\r\n                            {kegs.map(function (v) {\r\n                                let volLeft = v.volStart - v.volDisp;\r\n                                let lvl = self.kegLevel(v);\r\n                                let drinksLeft = v.drinkSize ? parseInt(volLeft / v.drinkSize) : 0;\r\n                                let r = v.r;\r\n                                let c = r.config;\r\n                                let isMetric = r.config.displayUnits || 0;\r\n                                let bar = self.getBar(c, lvl);\r\n\r\n                                return h(\r\n                                    \"tr\", {},\r\n                                    <td>\r\n                                        <a href={\"/sites/\" + self.props.name + \"/\" + v.d.id + \"/\" + v.port}>\r\n                                            {v.userName || \"Port \" + (v.port + 1)}\r\n                                        </a>\r\n                                    </td>,\r\n                                    <td class={r.online ? \"text-success\" : \"text-danger\"}>\r\n                                        <b>\r\n                                            {r.online ? \"online\" : \"offline\"}\r\n                                        </b>\r\n                                    </td>,\r\n                                    <td>\r\n                                        {bar}\r\n                                    </td>,\r\n                                    <td>\r\n                                        {self.mlToUnits(v.volDisp, isMetric)}\r\n                                    </td>,\r\n                                    <td class={volLeft <= 0 ? \"bg-danger text-light\" : \"\"}>\r\n                                        {self.mlToUnits(volLeft, isMetric)}\r\n                                    </td>,\r\n                                    <td class={drinksLeft <= 0 ? \"bg-danger text-light\" : \"\"}>\r\n                                        {drinksLeft}\r\n                                    </td>,\r\n                                    <td>\r\n                                        {self.mlToUnits(v.volSize, isMetric)}\r\n                                    </td>,\r\n                                    <td>\r\n                                        <a href={\"/config/\" + self.props.name + \"/\" + v.d.id + \"/\" + v.port}>\r\n                                            <span class=\"fa fa-cog\" />\r\n                                        </a>\r\n                                    </td>\r\n                                )\r\n                            })}\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import Configuration from './configuration';\r\nconst axios = require('axios').default;\r\n\r\nexport default class GlobalAccess {\r\n    static getDevices = (app) => {\r\n        axios\r\n            .get(\r\n                Configuration.mdashURL + \"/customer?access_token=\" + localStorage.ktok\r\n            )\r\n            .then(function (res) {\r\n                var devices = {},\r\n                    pubkeys = res.data.pubkeys || {};\r\n                var keys = Object.keys(pubkeys);\r\n                var pending = keys.map(function (k) {\r\n                    var url =\r\n                        Configuration.mdashURL +\r\n                        \"/api/v2/m/device?access_token=\" +\r\n                        encodeURIComponent(k);\r\n                    return axios({\r\n                        method: \"GET\",\r\n                        url: url\r\n                    })\r\n                        .then(function (res) {\r\n                            devices[k] = res.data;\r\n                        })\r\n                        .catch(function () { });\r\n                });\r\n                Promise.all(pending).then(function () {\r\n                    app.setState({\r\n                        devices: devices\r\n                    });\r\n                })\r\n            });\r\n    }\r\n\r\n    static getAllServings = (app) => {\r\n        axios\r\n            .get(\r\n                Configuration.mdashURL + \"/customer?access_token=\" + localStorage.ktok\r\n            )\r\n            .then(function (res) {\r\n                var servings = {}, pubkeys = res.data.pubkeys || {};\r\n\r\n                var keys = Object.keys(pubkeys);\r\n                var pending = keys.map(function (k) {\r\n                    var url = Configuration.mdashURL + \"/api/v2/m/device/data/servings_all?access_token=\" + encodeURIComponent(k);\r\n                    return axios({\r\n                        method: \"GET\",\r\n                        url: url\r\n                    })\r\n                        .then(function (res) {\r\n                            servings[k] = res.data;\r\n                        })\r\n                        .catch(function () { });\r\n                });\r\n                Promise.all(pending).then(function () {\r\n                    app.setState({\r\n                        servings: servings,\r\n                        pubkeys: pubkeys\r\n                    });\r\n                })\r\n            });\r\n    }\r\n}","const Configuration = {\r\n    baseURL: \"http://localhost:8080/\",\r\n    provisionURL: \"http://192.168.4.1\",\r\n    mdashURL: \"https://mdash.net\",\r\n    appID: \"\", // <-- Set this to YOUR_APP_ID\r\n    callTimeoutMilli: 10000, // 10 seconds\r\n    defaultSiteName: \"NewSite\",\r\n    drinkSizes: {\r\n        \"1000\": \"Liter (1000 mL)\",\r\n        \"500\": \"Half Liter (500 mL)\",\r\n        \"651\": \"Bomber (651 mL)\",\r\n        \"568\": \"UK Pint (568 mL)\",\r\n        \"473\": \"US Pint (473 mL)\",\r\n        \"355\": \"US Bottle (355 mL)\",\r\n        \"0\": \"Custom\"\r\n    },\r\n    drinkSizes_US: {\r\n        \"1000\": \"Liter (33.8oz)\",\r\n        \"500\": \"Half Liter (16.9 oz)\",\r\n        \"651\": \"Bomber (22.0 oz)\",\r\n        \"568\": \"UK Pint (19.2 oz)\",\r\n        \"473\": \"US Pint (16 oz)\",\r\n        \"355\": \"US Bottle (12 oz)\",\r\n        \"0\": \"Custom\"\r\n    },\r\n    kegSizes: {\r\n        \"9464\": \"Half Corny (9.5L)\",\r\n        \"18927\": \"Corny (18.9L)\",\r\n        \"19550\": \"1/6 Barrel (19.6L)\",\r\n        \"20000\": \"20L\",\r\n        \"25000\": \"25L\",\r\n        \"29340\": \"1/4 Barrel (29.3L)\",\r\n        \"30000\": \"30L\",\r\n        \"40915\": \"Firkin (40.9L)\",\r\n        \"50000\": \"50L\",\r\n        \"58670\": \"1/2 Barrel (58.7L)\",\r\n        \"0\": \"Custom\"\r\n    },\r\n    kegSizes_US: {\r\n        \"9464\": \"Half Corny (2.5 gal)\",\r\n        \"18927\": \"Corny (5 gal)\",\r\n        \"19550\": \"1/6 Barrel (5.16 gal)\",\r\n        \"20000\": \"20L (5.28 gal)\",\r\n        \"25000\": \"25L (6.6 gal)\",\r\n        \"29340\": \"1/4 Barrel (7.75 gal)\",\r\n        \"30000\": \"30L (7.93 gal)\",\r\n        \"40915\": \"Firkin (10.81 gal)\",\r\n        \"50000\": \"50L (13.21 gal)\",\r\n        \"58670\": \"1/2 Barrel (15.5 gal)\",\r\n        \"0\": \"Custom\"\r\n    }\r\n}\r\n\r\nexport default Configuration;"],"sourceRoot":""}